# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reorderList(self, head: Optional[ListNode]) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        mylist=[]
        curr=head
        count=0
        while curr != None:
            mylist.append(curr.val)
            curr=curr.next
            count +=1
        curr=head
        i=0
        while curr.next != None:
            curr.next.val=mylist[count-1-i]
            i=i+1
            curr=curr.next
            if curr.next == None:
                break
            curr.next.val=mylist[i]
            curr=curr.next
        return head

        
        
